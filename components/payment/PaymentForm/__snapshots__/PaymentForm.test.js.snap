// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PaymentForm /> should render without props 1`] = `
<form
  aria-hidden={false}
  className="css-8o331q"
>
  <fieldset
    className="css-94sf3x"
  >
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="name"
      >
        name
      </label>
      <input
        className="css-cth1sm"
        id="name"
        onChange={[Function]}
        placeholder="John Doe"
        required={true}
        type="text"
        value=""
      />
    </fieldset>
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="address"
      >
        address
      </label>
      <input
        className="css-cth1sm"
        id="address"
        onChange={[Function]}
        placeholder="J191 S. Illinois Street, Everett, MA 02149"
        required={true}
        type="text"
        value=""
      />
    </fieldset>
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="email"
      >
        email
      </label>
      <input
        className="css-cth1sm"
        id="email"
        onChange={[Function]}
        placeholder="johndoe@example.com"
        required={true}
        type="email"
        value=""
      />
    </fieldset>
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="phone"
      >
        phone
      </label>
      <input
        className="css-cth1sm"
        id="phone"
        onChange={[Function]}
        placeholder="(941) 555-0123"
        required={true}
        type="tel"
        value=""
      />
    </fieldset>
    <div
      className="css-70qvj9"
    >
      <label
        className="css-1gjn3mk"
        htmlFor="StripeElement"
      >
        card
      </label>
      <p
        className="css-1i3anel"
      >
        Use any future date and CVC with
         
        <strong>
          4242 4242 4242 4242
        </strong>
         number for testing
      </p>
      <p
        className="css-cz9gy2"
        data-testid="form-card-error"
      />
    </div>
    <CardElement
      data-testid="cardElement"
      onChange={[Function]}
      options={
        Object {
          "hidePostalCode": true,
          "iconStyle": "solid",
          "style": Object {
            "base": Object {
              ":-webkit-autofill": Object {
                "color": "#fce883",
              },
              "::placeholder": Object {
                "color": "#4A5568",
              },
              "border": "1px solid black",
              "color": "#1A202C",
              "fontFamily": "Montserrat, Open Sans, Segoe UI, sans-serif",
              "fontSize": "16px",
              "fontSmoothing": "antialiased",
              "fontWeight": 500,
              "iconColor": "#1A202C",
            },
            "invalid": Object {
              "color": "#f#C53030",
              "iconColor": "##C53030",
            },
          },
        }
      }
    />
  </fieldset>
  <p
    className="css-1yab5hb"
  >
    By proceeding you accept the
     
    <a
      className="css-1c5zfe9"
    >
      Terms of Service
    </a>
     
    of the company.
  </p>
  <div
    className="css-1rsrz83"
  >
    <button
      className="css-1h13z07"
      data-cy="button"
      data-testid="review-button"
      href="#void"
      onClick={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
      type="button"
    >
      BACK TO REVIEW
    </button>
    <button
      className="css-187kagv"
      data-cy="button"
      data-testid="submit-button"
      disabled={true}
      href="#void"
      onClick={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
      type="submit"
    >
      FILL THE FORM
    </button>
  </div>
</form>
`;

exports[`<PaymentForm /> when form completed should render form values and enabled button 1`] = `
<form
  aria-hidden={false}
  className="css-8o331q"
>
  <fieldset
    className="css-94sf3x"
  >
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="name"
      >
        name
      </label>
      <input
        className="css-cth1sm"
        id="name"
        onChange={[Function]}
        placeholder="John Doe"
        required={true}
        type="text"
        value="mock_value"
      />
    </fieldset>
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="address"
      >
        address
      </label>
      <input
        className="css-cth1sm"
        id="address"
        onChange={[Function]}
        placeholder="J191 S. Illinois Street, Everett, MA 02149"
        required={true}
        type="text"
        value="mock_value"
      />
    </fieldset>
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="email"
      >
        email
      </label>
      <input
        className="css-cth1sm"
        id="email"
        onChange={[Function]}
        placeholder="johndoe@example.com"
        required={true}
        type="email"
        value="mock_value"
      />
    </fieldset>
    <fieldset
      className="css-9x3bhi"
    >
      <label
        className="css-1xnp38i"
        htmlFor="phone"
      >
        phone
      </label>
      <input
        className="css-cth1sm"
        id="phone"
        onChange={[Function]}
        placeholder="(941) 555-0123"
        required={true}
        type="tel"
        value="mock_value"
      />
    </fieldset>
    <div
      className="css-70qvj9"
    >
      <label
        className="css-1gjn3mk"
        htmlFor="StripeElement"
      >
        card
      </label>
      <p
        className="css-1i3anel"
      >
        Use any future date and CVC with
         
        <strong>
          4242 4242 4242 4242
        </strong>
         number for testing
      </p>
      <p
        className="css-cz9gy2"
        data-testid="form-card-error"
      />
    </div>
    <CardElement
      data-testid="cardElement"
      onChange={[Function]}
      options={
        Object {
          "hidePostalCode": true,
          "iconStyle": "solid",
          "style": Object {
            "base": Object {
              ":-webkit-autofill": Object {
                "color": "#fce883",
              },
              "::placeholder": Object {
                "color": "#4A5568",
              },
              "border": "1px solid black",
              "color": "#1A202C",
              "fontFamily": "Montserrat, Open Sans, Segoe UI, sans-serif",
              "fontSize": "16px",
              "fontSmoothing": "antialiased",
              "fontWeight": 500,
              "iconColor": "#1A202C",
            },
            "invalid": Object {
              "color": "#f#C53030",
              "iconColor": "##C53030",
            },
          },
        }
      }
    />
  </fieldset>
  <p
    className="css-1yab5hb"
  >
    By proceeding you accept the
     
    <a
      className="css-1c5zfe9"
    >
      Terms of Service
    </a>
     
    of the company.
  </p>
  <div
    className="css-1rsrz83"
  >
    <button
      className="css-1h13z07"
      data-cy="button"
      data-testid="review-button"
      href="#void"
      onClick={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
      type="button"
    >
      BACK TO REVIEW
    </button>
    <button
      className="css-187kagv"
      data-cy="button"
      data-testid="submit-button"
      disabled={false}
      href="#void"
      onClick={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
      type="submit"
    >
      PAY 100 $
    </button>
  </div>
</form>
`;
